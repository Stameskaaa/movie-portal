{"version":3,"file":"static/js/322.6e7f1227.chunk.js","mappings":"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","sources":["webpack://movie-portal/./src/components/ButtonLike/ButtonLike.module.scss?fdb4","components/ButtonLike/ButtonLike.tsx","webpack://movie-portal/./src/components/PaginationComponent/PaginationButton/PaginationButton.module.scss?ef7f","components/PaginationComponent/PaginationButton/PaginationButton.tsx","webpack://movie-portal/./src/components/PaginationComponent/PaginationComponent.module.scss?644f","webpack://movie-portal/./src/components/PaginationComponent/PaginationInput/PaginationInput.module.scss?0564","components/PaginationComponent/PaginationInput/PaginationInput.tsx","components/PaginationComponent/PaginationComponent.tsx","hooks/useFavorite/useFavorite.ts","webpack://movie-portal/./src/pages/SearchPage/SearchCard/SearchCard.module.scss?2479","pages/SearchPage/SearchCard/SearchCard.tsx","webpack://movie-portal/./src/components/Input/input.module.scss?f849","components/Input/Input.tsx","webpack://movie-portal/./src/pages/SearchPage/SearchPage.module.scss?17fb","webpack://movie-portal/./src/components/DropDownList/DropDownList.module.scss?c128","components/DropDownList/DropDownList.tsx","services/constants/apiConstants.ts","webpack://movie-portal/./src/pages/SearchPage/FiltersPanel/FiltersPanel.module.scss?52fb","pages/SearchPage/FiltersPanel/FiltersPanel.tsx","pages/SearchPage/SearchPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"hearth\":\"ButtonLike_hearth__qmbRP\",\"active\":\"ButtonLike_active__nvAv7\"};","import styles from './ButtonLike.module.scss';\r\nimport { GoHeartFill } from 'react-icons/go';\r\n\r\ninterface Props {\r\n  active: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ButtonLike: React.FC<Props> = ({ active, onClick }) => {\r\n  const stopPropagation = (e: React.MouseEvent<SVGElement>) => {\r\n    e.stopPropagation();\r\n    onClick();\r\n  };\r\n\r\n  return (\r\n    <GoHeartFill\r\n      onClick={stopPropagation}\r\n      className={`${styles.hearth} ${active ? styles.active : null}`}\r\n      size={40}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"PaginationButton_button__imGZP\",\"active\":\"PaginationButton_active__FazGJ\"};","import styles from './PaginationButton.module.scss';\r\n\r\ninterface Props {\r\n  text: string;\r\n  onClick: (number: string) => void;\r\n  currentPage: string;\r\n}\r\n\r\nexport const PaginationButton: React.FC<Props> = ({ text, onClick, currentPage }) => {\r\n  const handlePaginationClick = () => {\r\n    onClick(text);\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`${styles.button} ${currentPage === text ? styles.active : null}`}\r\n      onClick={() => handlePaginationClick()}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaginationComponent_container__+1A8n\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"PaginationInput_input__YuomI\",\"active\":\"PaginationInput_active__5gS48\"};","import { useEffect, useState } from 'react';\r\nimport styles from './PaginationInput.module.scss';\r\n\r\ninterface Props {\r\n  totalPages: number;\r\n  setData: (number: string) => void;\r\n  currentPage: string;\r\n}\r\n\r\nexport const PaginationInput: React.FC<Props> = ({ totalPages, setData, currentPage }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (value) {\r\n        setData(value);\r\n      }\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value]);\r\n\r\n  const hanleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (/^\\d*$/.test(e.target.value)) {\r\n      if (+e.target.value >= totalPages) {\r\n        setValue(totalPages + '');\r\n      } else {\r\n        setValue(e.target.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      value={value}\r\n      placeholder={currentPage}\r\n      onChange={hanleInput}\r\n      className={`${styles.input} ${\r\n        +currentPage > 5 && +currentPage !== totalPages ? styles.active : null\r\n      }`}\r\n    />\r\n  );\r\n};\r\n","import { useSearchParams } from 'react-router-dom';\r\nimport { PaginationButton } from './PaginationButton/PaginationButton';\r\nimport styles from './PaginationComponent.module.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport { PaginationInput } from './PaginationInput/PaginationInput';\r\n\r\ninterface Props {\r\n  totalPages: number;\r\n}\r\n\r\nexport const PaginationComponent: React.FC<Props> = ({ totalPages }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [currentPage, setCurrentPage] = useState('1');\r\n\r\n  useEffect(() => {\r\n    const paramsObject = Object.fromEntries(searchParams.entries());\r\n    if (!paramsObject?.page) {\r\n      setNewPage('1');\r\n    } else {\r\n      setNewPage(currentPage);\r\n    }\r\n  }, [currentPage, searchParams]);\r\n\r\n  const setNewPage = (number: string) => {\r\n    const newParams = new URLSearchParams(searchParams);\r\n    newParams.set('page', number);\r\n\r\n    setSearchParams(newParams);\r\n  };\r\n\r\n  const arrNumber = (num: number) => {\r\n    return Array.from({ length: num }, (_, i) => i + 1);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {totalPages &&\r\n        totalPages >= 5 &&\r\n        arrNumber(5).map((value) => (\r\n          <PaginationButton\r\n            key={value}\r\n            currentPage={currentPage}\r\n            onClick={setCurrentPage}\r\n            text={`${value}`}\r\n          />\r\n        ))}{' '}\r\n      {totalPages >= 6 && (\r\n        <>\r\n          <span>. . .</span>\r\n          <PaginationInput\r\n            currentPage={currentPage}\r\n            totalPages={totalPages}\r\n            setData={setCurrentPage}\r\n          />\r\n          <PaginationButton\r\n            key={totalPages}\r\n            currentPage={currentPage}\r\n            onClick={setCurrentPage}\r\n            text={`${totalPages}`}\r\n          />{' '}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useAppSelector } from '../typedReduxHooks/reduxHook';\r\nimport { addFavorite, deleteFavorite } from '../../features/authSlice/authSlice';\r\nimport { useAppDispatch } from '../typedReduxHooks/reduxHook';\r\nimport { changeFavoriteList } from '../../utils/utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const useFavorite = (id: string | undefined) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const { userData, authorized } = useAppSelector((state) => state.auth);\r\n  const [inFavorite, setInFavorite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (userData?.favorites && authorized && id) {\r\n      setInFavorite(userData.favorites.includes(id));\r\n    } else {\r\n      setInFavorite(false);\r\n    }\r\n  }, [userData, authorized, id]);\r\n\r\n  const addInFavorite = () => {\r\n    if (userData?.name && authorized && id) {\r\n      if (inFavorite) {\r\n        setInFavorite(false);\r\n        dispatch(deleteFavorite(id));\r\n        changeFavoriteList(userData.name, id, false);\r\n      } else {\r\n        setInFavorite(true);\r\n        dispatch(addFavorite(id));\r\n        changeFavoriteList(userData.name, id, true);\r\n      }\r\n    } else {\r\n      navigate('/auth');\r\n    }\r\n  };\r\n\r\n  return { inFavorite, addInFavorite };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card_container\":\"SearchCard_card_container__A7BVa\",\"like_container\":\"SearchCard_like_container__IkJzf\"};","import styles from './SearchCard.module.scss';\r\nimport { FilmData } from '../../../types/apiTypes';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ButtonLike } from '../../../components/ButtonLike/ButtonLike';\r\nimport { useFavorite } from '../../../hooks/useFavorite/useFavorite';\r\n\r\nexport const SearchCard: React.FC<FilmData> = (props) => {\r\n  const { inFavorite, addInFavorite } = useFavorite(props.kinopoiskId + '');\r\n  const naviagate = useNavigate();\r\n\r\n  return (\r\n    <div\r\n      onClick={() => naviagate(`/openmovie/${props.kinopoiskId}`)}\r\n      className={styles.card_container}>\r\n      <img className={styles.image} src={props.posterUrl} />\r\n      <div className={styles.like_container}>\r\n        <ButtonLike active={inFavorite} onClick={addInFavorite} />\r\n      </div>\r\n      {props.nameRu ? <p>{props.nameRu}</p> : <p>{props.nameOriginal}</p>}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input_container\":\"input_input_container__4pww1\",\"icon\":\"input_icon__CsDhP\",\"icon2\":\"input_icon2__bHA1I\",\"input\":\"input_input__SuKAN\"};","import styles from './input.module.scss';\r\nimport { IoIosSearch } from 'react-icons/io';\r\nimport { HiMiniXMark } from 'react-icons/hi2';\r\ninterface Props {\r\n  value: string;\r\n  setValue: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport const Input: React.FC<Props> = ({ value, setValue }) => {\r\n  return (\r\n    <div className={styles.input_container}>\r\n      <IoIosSearch className={styles.icon} size={26} />\r\n      <input\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n        className={styles.input}\r\n        placeholder=\"Search\"\r\n      />\r\n      <HiMiniXMark onClick={() => setValue('')} className={styles.icon2} size={30} />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"grid_container\":\"SearchPage_grid_container__v3L8l\"};","// extracted by mini-css-extract-plugin\nexport default {\"dropdown\":\"DropDownList_dropdown__Q-x0G\",\"dropdown_content\":\"DropDownList_dropdown_content__1UUvy\",\"title\":\"DropDownList_title__7HiLi\"};","import styles from './DropDownList.module.scss';\r\nimport { FilterDataList, FilterDataItem } from '../../types/apiTypes';\r\nimport { capitalizeFirstLetter } from '../../utils/utils';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { TypeKey } from '../../types/apiTypes';\r\ninterface Props {\r\n  items: FilterDataList;\r\n  defaultVal: FilterDataItem;\r\n  type: TypeKey;\r\n  title: string;\r\n}\r\n\r\nexport const DropDownList: React.FC<Props> = ({ items, type, defaultVal, title }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [currentFilter, setCurrentFilter] = useState<FilterDataItem>(defaultVal);\r\n\r\n  const handleFilterChange = (item: any) => {\r\n    setCurrentFilter(item);\r\n    const params = new URLSearchParams(searchParams.toString());\r\n    params.set(type, item.id);\r\n    setSearchParams(params);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.dropdown}>\r\n        <h4>{title}</h4>\r\n        <div className={styles.title}>{capitalizeFirstLetter(currentFilter.eng)}</div>\r\n        <div className={styles.dropdown_content}>\r\n          {items.map((item, i) =>\r\n            item.eng ? (\r\n              <p onClick={() => handleFilterChange(item)} key={i}>\r\n                {capitalizeFirstLetter(item.eng)}\r\n              </p>\r\n            ) : null,\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { FilterDataList, FilterDataItem } from '../../types/apiTypes';\r\n\r\nconst orderList: FilterDataList = [\r\n  {\r\n    id: 'RATING',\r\n    ru: 'Рейтинг',\r\n    eng: 'Rating',\r\n  },\r\n  {\r\n    id: 'NUM_VOTE',\r\n    ru: 'Количество голосов',\r\n    eng: 'Number votes',\r\n  },\r\n  {\r\n    id: 'YEAR',\r\n    ru: 'Год',\r\n    eng: 'Year',\r\n  },\r\n];\r\n\r\nconst typeList: FilterDataList = [\r\n  {\r\n    id: 'FILM',\r\n    ru: 'Фильм',\r\n    eng: 'Film',\r\n  },\r\n  {\r\n    id: 'TV_SHOW',\r\n    ru: 'ТВ Шоу',\r\n    eng: 'TV Show',\r\n  },\r\n  {\r\n    id: 'TV_SERIES',\r\n    ru: 'ТВ Сериал',\r\n    eng: 'TV Series',\r\n  },\r\n  {\r\n    id: 'MINI_SERIES',\r\n    ru: 'Мини Сериал',\r\n    eng: 'Mini Series',\r\n  },\r\n  {\r\n    id: 'ALL',\r\n    ru: 'Все',\r\n    eng: 'All',\r\n  },\r\n];\r\nconst genreList: FilterDataList = [\r\n  {\r\n    id: 'ALL',\r\n    ru: 'все',\r\n    eng: 'all',\r\n  },\r\n  {\r\n    id: '1',\r\n    ru: 'триллер',\r\n    eng: 'thriller',\r\n  },\r\n  {\r\n    id: '2',\r\n    ru: 'драма',\r\n    eng: 'drama',\r\n  },\r\n  {\r\n    id: '3',\r\n    ru: 'криминал',\r\n    eng: 'crime',\r\n  },\r\n  {\r\n    id: '4',\r\n    ru: 'мелодрама',\r\n    eng: 'melodrama',\r\n  },\r\n  {\r\n    id: '5',\r\n    ru: 'детектив',\r\n    eng: 'detective',\r\n  },\r\n  {\r\n    id: '6',\r\n    ru: 'фантастика',\r\n    eng: 'fantasy',\r\n  },\r\n  {\r\n    id: '7',\r\n    ru: 'приключения',\r\n    eng: 'adventure',\r\n  },\r\n  {\r\n    id: '8',\r\n    ru: 'биография',\r\n    eng: 'biography',\r\n  },\r\n  {\r\n    id: '9',\r\n    ru: 'фильм-нуар',\r\n    eng: 'film noir',\r\n  },\r\n  {\r\n    id: '10',\r\n    ru: 'вестерн',\r\n    eng: 'western',\r\n  },\r\n  {\r\n    id: '11',\r\n    ru: 'боевик',\r\n    eng: 'action',\r\n  },\r\n  {\r\n    id: '12',\r\n    ru: 'фэнтези',\r\n    eng: 'fantasy',\r\n  },\r\n  {\r\n    id: '13',\r\n    ru: 'комедия',\r\n    eng: 'comedy',\r\n  },\r\n  {\r\n    id: '14',\r\n    ru: 'военный',\r\n    eng: 'war',\r\n  },\r\n  {\r\n    id: '15',\r\n    ru: 'история',\r\n    eng: 'history',\r\n  },\r\n  {\r\n    id: '16',\r\n    ru: 'музыка',\r\n    eng: 'music',\r\n  },\r\n  {\r\n    id: '17',\r\n    ru: 'ужасы',\r\n    eng: 'horror',\r\n  },\r\n  {\r\n    id: '18',\r\n    ru: 'мультфильм',\r\n    eng: 'animated',\r\n  },\r\n  {\r\n    id: '19',\r\n    ru: 'семейный',\r\n    eng: 'family',\r\n  },\r\n  {\r\n    id: '20',\r\n    ru: 'мюзикл',\r\n    eng: 'musical',\r\n  },\r\n  {\r\n    id: '21',\r\n    ru: 'спорт',\r\n    eng: 'sport',\r\n  },\r\n  {\r\n    id: '22',\r\n    ru: 'документальный',\r\n    eng: 'documentary',\r\n  },\r\n  {\r\n    id: '23',\r\n    ru: 'короткометражка',\r\n    eng: 'short',\r\n  },\r\n  {\r\n    id: '24',\r\n    ru: 'аниме',\r\n    eng: 'anime',\r\n  },\r\n  {\r\n    id: '25',\r\n    ru: '',\r\n    eng: '',\r\n  },\r\n  {\r\n    id: '26',\r\n    ru: 'новости',\r\n    eng: 'news',\r\n  },\r\n  {\r\n    id: '27',\r\n    ru: 'концерт',\r\n    eng: 'concert',\r\n  },\r\n  {\r\n    id: '28',\r\n    ru: 'для взрослых',\r\n    eng: 'adult',\r\n  },\r\n  {\r\n    id: '29',\r\n    ru: 'церемония',\r\n    eng: 'ceremony',\r\n  },\r\n  {\r\n    id: '30',\r\n    ru: 'реальное ТВ',\r\n    eng: 'reality TV',\r\n  },\r\n  {\r\n    id: '31',\r\n    ru: 'игра',\r\n    eng: 'game',\r\n  },\r\n  {\r\n    id: '32',\r\n    ru: 'ток-шоу',\r\n    eng: 'talk show',\r\n  },\r\n  {\r\n    id: '33',\r\n    ru: 'детский',\r\n    eng: 'children',\r\n  },\r\n];\r\n\r\nconst countriesList: string[] = [\r\n  'США',\r\n  'Швейцария',\r\n  'Франция',\r\n  'Польша',\r\n  'Великобритания',\r\n  'Швеция',\r\n  'Индия',\r\n  'Испания',\r\n  'Германия',\r\n  'Италия',\r\n  'Гонконг',\r\n  'Германия (ФРГ)',\r\n  'Австралия',\r\n  'Канада',\r\n  'Мексика',\r\n  'Япония',\r\n  'Дания',\r\n  'Чехия',\r\n  'Ирландия',\r\n  'Люксембург',\r\n  'Китай',\r\n  'Норвегия',\r\n  'Нидерланды',\r\n  'Аргентина',\r\n  'Финляндия',\r\n  'Босния и Герцеговина',\r\n  'Австрия',\r\n  'Тайвань',\r\n  'Новая Зеландия',\r\n  'Бразилия',\r\n  'Чехословакия',\r\n  'Мальта',\r\n  'СССР',\r\n  'Россия',\r\n  'Югославия',\r\n  'Португалия',\r\n  'Румыния',\r\n  'Хорватия',\r\n  'ЮАР',\r\n  'Куба',\r\n  'Колумбия',\r\n  'Израиль',\r\n  'Намибия',\r\n  'Турция',\r\n  'Бельгия',\r\n  'Сальвадор',\r\n  'Исландия',\r\n  'Венгрия',\r\n  'Корея Южная',\r\n  'Лихтенштейн',\r\n  'Болгария',\r\n  'Филиппины',\r\n  'Доминикана',\r\n  '',\r\n  'Марокко',\r\n  'Таиланд',\r\n  'Кения',\r\n  'Пакистан',\r\n  'Иран',\r\n  'Панама',\r\n  'Аруба',\r\n  'Ямайка',\r\n  'Греция',\r\n  'Тунис',\r\n  'Кыргызстан',\r\n  'Пуэрто Рико',\r\n  'Казахстан',\r\n  'Югославия (ФР)',\r\n  'Алжир',\r\n  'Германия (ГДР)',\r\n  'Сингапур',\r\n  'Словакия',\r\n  'Афганистан',\r\n  'Индонезия',\r\n  'Перу',\r\n  'Бермуды',\r\n  'Монако',\r\n  'Зимбабве',\r\n  'Вьетнам',\r\n  'Антильские Острова',\r\n  'Саудовская Аравия',\r\n  'Танзания',\r\n  'Ливия',\r\n  'Ливан',\r\n  'Кувейт',\r\n  'Египет',\r\n  'Литва',\r\n  'Венесуэла',\r\n  'Словения',\r\n  'Чили',\r\n  'Багамы',\r\n  'Эквадор',\r\n  'Коста-Рика',\r\n  'Кипр',\r\n  'Уругвай',\r\n  'Ирак',\r\n  'Мартиника',\r\n  'Эстония',\r\n  'ОАЭ',\r\n  'Бангладеш',\r\n  'Македония',\r\n  'Гвинея',\r\n  'Иордания',\r\n  'Литва',\r\n];\r\n\r\nconst getItemById = (id: string, arr: FilterDataList): FilterDataItem | undefined => {\r\n  return arr.find((value) => value.id === id);\r\n};\r\n\r\ntype languages = 'eng' | 'ru';\r\n\r\nconst findItemId = (item: string | undefined, arr: FilterDataList, type: languages): string => {\r\n  const result = arr.find((value) => value[type] === item);\r\n  return result ? result.id : '';\r\n};\r\n\r\nexport { orderList, typeList, genreList, countriesList, findItemId, getItemById };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"search_container\":\"FiltersPanel_search_container__I3yIc\"};","import { DropDownList } from '../../../components/DropDownList/DropDownList';\r\nimport { FilterButton } from '../../../components/FilterButton/FilterButton';\r\nimport { genreList, typeList, orderList } from '../../../services/constants/apiConstants';\r\nimport styles from './FiltersPanel.module.scss';\r\nimport { SearchString } from '../../../types/apiTypes';\r\n\r\ninterface Props {\r\n  data: SearchString;\r\n  setData: React.Dispatch<React.SetStateAction<SearchString>>;\r\n}\r\n\r\nexport const FiltersPanel: React.FC<Props> = ({ data, setData }) => {\r\n  return (\r\n    <div className={styles.search_container}>\r\n      <DropDownList\r\n        title={'Type'}\r\n        defaultVal={{ eng: 'All', ru: 'Все', id: '999' }}\r\n        type=\"type\"\r\n        items={typeList}\r\n      />\r\n      {/* <FilterButton text=\"Films\" /> */}\r\n\r\n      {/* <FilterButton text=\"Actors\" /> */}\r\n      <DropDownList\r\n        title={'Sorting'}\r\n        defaultVal={{ eng: 'Rating', ru: 'Рейтинг', id: '999' }}\r\n        type=\"order\"\r\n        items={orderList}\r\n      />\r\n\r\n      <DropDownList\r\n        title={'Genre'}\r\n        defaultVal={{ eng: 'All', ru: 'Все жанры', id: '999' }}\r\n        type=\"genre\"\r\n        items={genreList}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { Input } from '../../components/Input/Input';\r\nimport { MovieLoader } from '../../components/MovieLoader/MovieLoader';\r\nimport { useGetFilmsQuery } from '../../services/movieApi/movieApi';\r\nimport { SearchCard } from './SearchCard/SearchCard';\r\nimport { FilmData } from '../../types/apiTypes';\r\nimport styles from './SearchPage.module.scss';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { SearchString } from '../../types/apiTypes';\r\nimport { FiltersPanel } from './FiltersPanel/FiltersPanel';\r\nimport { ErrorComponent } from '../../components/ErrorComponent/ErrorComponent';\r\nimport { PaginationComponent } from '../../components/PaginationComponent/PaginationComponent';\r\n\r\nconst SearchPage = () => {\r\n  const [value, setValue] = useState('');\r\n  const timer = useRef<null | NodeJS.Timeout>(null);\r\n  const [searchParams] = useSearchParams();\r\n  const [searchString, setSearchString] = useState<SearchString>(\r\n    () => Object.fromEntries(searchParams.entries()) as SearchString,\r\n  );\r\n  const { data, error, isLoading } = useGetFilmsQuery(searchString);\r\n\r\n  useEffect(() => {\r\n    // При изменении поисковой строки или инпута\r\n    // Для начала поиска используется только одна функция\r\n    timer.current = setTimeout(() => {\r\n      parseSearchParams();\r\n    }, 300);\r\n    return () => {\r\n      timer.current && clearTimeout(timer.current);\r\n    };\r\n  }, [value, searchParams]);\r\n\r\n  const parseSearchParams = () => {\r\n    const searchParamsObj = Object.fromEntries(searchParams.entries());\r\n    const newParamsObj = {\r\n      ...searchParamsObj,\r\n      keyword: value,\r\n    };\r\n    setSearchString(newParamsObj);\r\n    return newParamsObj;\r\n  };\r\n\r\n  if (error) {\r\n    <div>Some Error</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.page_container}>\r\n      {' '}\r\n      <Input value={value} setValue={setValue} />\r\n      <FiltersPanel setData={setSearchString} data={searchString} />\r\n      {isLoading ? (\r\n        <MovieLoader />\r\n      ) : !!data?.items.length ? (\r\n        <>\r\n          <div className={styles.grid_container}>\r\n            {data.items.map((movie: FilmData) => {\r\n              return <SearchCard key={movie.kinopoiskId} {...movie} />;\r\n            })}\r\n          </div>\r\n\r\n          <PaginationComponent totalPages={data.totalPages} />\r\n        </>\r\n      ) : (\r\n        <ErrorComponent text=\"Movies not found \" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"names":["ButtonLike","_ref","active","onClick","_jsx","GoHeartFill","e","stopPropagation","className","styles","size","PaginationButton","text","currentPage","window","scrollTo","top","behavior","children","PaginationInput","totalPages","setData","value","setValue","useState","useEffect","timer","setTimeout","clearTimeout","placeholder","onChange","test","target","PaginationComponent","searchParams","setSearchParams","useSearchParams","setCurrentPage","paramsObject","Object","fromEntries","entries","page","setNewPage","number","newParams","URLSearchParams","set","_jsxs","num","Array","from","length","_","i","map","_Fragment","useFavorite","id","dispatch","useAppDispatch","navigate","useNavigate","userData","authorized","useAppSelector","state","auth","inFavorite","setInFavorite","favorites","includes","addInFavorite","name","deleteFavorite","changeFavoriteList","addFavorite","SearchCard","props","kinopoiskId","naviagate","card_container","image","src","posterUrl","like_container","nameRu","nameOriginal","Input","IoIosSearch","HiMiniXMark","DropDownList","items","type","defaultVal","title","currentFilter","setCurrentFilter","capitalizeFirstLetter","eng","item","params","toString","handleFilterChange","orderList","ru","typeList","genreList","FiltersPanel","data","SearchPage","useRef","searchString","setSearchString","error","isLoading","useGetFilmsQuery","current","parseSearchParams","newParamsObj","keyword","page_container","MovieLoader","grid_container","movie","ErrorComponent"],"sourceRoot":""}