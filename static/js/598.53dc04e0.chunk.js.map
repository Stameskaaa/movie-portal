{"version":3,"file":"static/js/598.53dc04e0.chunk.js","mappings":"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","sources":["webpack://movie-portal/./src/components/ButtonLike/ButtonLike.module.scss?fdb4","components/ButtonLike/ButtonLike.tsx","webpack://movie-portal/./src/components/PaginationComponent/PaginationButton/PaginationButton.module.scss?ef7f","components/PaginationComponent/PaginationButton/PaginationButton.tsx","webpack://movie-portal/./src/components/PaginationComponent/PaginationComponent.module.scss?644f","webpack://movie-portal/./src/components/PaginationComponent/PaginationInput/PaginationInput.module.scss?0564","components/PaginationComponent/PaginationInput/PaginationInput.tsx","components/PaginationComponent/PaginationComponent.tsx","hooks/useFavorite/useFavorite.ts","webpack://movie-portal/./src/pages/SearchPage/SearchCard/SearchCard.module.scss?2479","pages/SearchPage/SearchCard/SearchCard.tsx","webpack://movie-portal/./src/pages/TrendingPage/TrendingPage.module.scss?bafb","pages/TrendingPage/TrendingPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"hearth\":\"ButtonLike_hearth__qmbRP\",\"active\":\"ButtonLike_active__nvAv7\"};","import styles from './ButtonLike.module.scss';\r\nimport { GoHeartFill } from 'react-icons/go';\r\n\r\ninterface Props {\r\n  active: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ButtonLike: React.FC<Props> = ({ active, onClick }) => {\r\n  const stopPropagation = (e: React.MouseEvent<SVGElement>) => {\r\n    e.stopPropagation();\r\n    onClick();\r\n  };\r\n\r\n  return (\r\n    <GoHeartFill\r\n      onClick={stopPropagation}\r\n      className={`${styles.hearth} ${active ? styles.active : null}`}\r\n      size={40}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"PaginationButton_button__imGZP\",\"active\":\"PaginationButton_active__FazGJ\"};","import styles from './PaginationButton.module.scss';\r\n\r\ninterface Props {\r\n  text: string;\r\n  onClick: (number: string) => void;\r\n  currentPage: string;\r\n}\r\n\r\nexport const PaginationButton: React.FC<Props> = ({ text, onClick, currentPage }) => {\r\n  const handlePaginationClick = () => {\r\n    onClick(text);\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`${styles.button} ${currentPage === text ? styles.active : null}`}\r\n      onClick={() => handlePaginationClick()}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaginationComponent_container__+1A8n\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"PaginationInput_input__YuomI\",\"active\":\"PaginationInput_active__5gS48\"};","import { useEffect, useState } from 'react';\r\nimport styles from './PaginationInput.module.scss';\r\n\r\ninterface Props {\r\n  totalPages: number;\r\n  setData: (number: string) => void;\r\n  currentPage: string;\r\n}\r\n\r\nexport const PaginationInput: React.FC<Props> = ({ totalPages, setData, currentPage }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (value) {\r\n        setData(value);\r\n      }\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value]);\r\n\r\n  const hanleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (/^\\d*$/.test(e.target.value)) {\r\n      if (+e.target.value >= totalPages) {\r\n        setValue(totalPages + '');\r\n      } else {\r\n        setValue(e.target.value);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      value={value}\r\n      placeholder={currentPage}\r\n      onChange={hanleInput}\r\n      className={`${styles.input} ${\r\n        +currentPage > 5 && +currentPage !== totalPages ? styles.active : null\r\n      }`}\r\n    />\r\n  );\r\n};\r\n","import { useSearchParams } from 'react-router-dom';\r\nimport { PaginationButton } from './PaginationButton/PaginationButton';\r\nimport styles from './PaginationComponent.module.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport { PaginationInput } from './PaginationInput/PaginationInput';\r\n\r\ninterface Props {\r\n  totalPages: number;\r\n}\r\n\r\nexport const PaginationComponent: React.FC<Props> = ({ totalPages }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [currentPage, setCurrentPage] = useState('1');\r\n\r\n  useEffect(() => {\r\n    const paramsObject = Object.fromEntries(searchParams.entries());\r\n    if (!paramsObject?.page) {\r\n      setNewPage('1');\r\n    } else {\r\n      setNewPage(currentPage);\r\n    }\r\n  }, [currentPage, searchParams]);\r\n\r\n  const setNewPage = (number: string) => {\r\n    const newParams = new URLSearchParams(searchParams);\r\n    newParams.set('page', number);\r\n\r\n    setSearchParams(newParams);\r\n  };\r\n\r\n  const arrNumber = (num: number) => {\r\n    return Array.from({ length: num }, (_, i) => i + 1);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {totalPages &&\r\n        totalPages >= 5 &&\r\n        arrNumber(5).map((value) => (\r\n          <PaginationButton\r\n            key={value}\r\n            currentPage={currentPage}\r\n            onClick={setCurrentPage}\r\n            text={`${value}`}\r\n          />\r\n        ))}{' '}\r\n      {totalPages >= 6 && (\r\n        <>\r\n          <span>. . .</span>\r\n          <PaginationInput\r\n            currentPage={currentPage}\r\n            totalPages={totalPages}\r\n            setData={setCurrentPage}\r\n          />\r\n          <PaginationButton\r\n            key={totalPages}\r\n            currentPage={currentPage}\r\n            onClick={setCurrentPage}\r\n            text={`${totalPages}`}\r\n          />{' '}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useAppSelector } from '../typedReduxHooks/reduxHook';\r\nimport { addFavorite, deleteFavorite } from '../../features/authSlice/authSlice';\r\nimport { useAppDispatch } from '../typedReduxHooks/reduxHook';\r\nimport { changeFavoriteList } from '../../utils/utils';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const useFavorite = (id: string | undefined) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const { userData, authorized } = useAppSelector((state) => state.auth);\r\n  const [inFavorite, setInFavorite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (userData?.favorites && authorized && id) {\r\n      setInFavorite(userData.favorites.includes(id));\r\n    } else {\r\n      setInFavorite(false);\r\n    }\r\n  }, [userData, authorized, id]);\r\n\r\n  const addInFavorite = () => {\r\n    if (userData?.name && authorized && id) {\r\n      if (inFavorite) {\r\n        setInFavorite(false);\r\n        dispatch(deleteFavorite(id));\r\n        changeFavoriteList(userData.name, id, false);\r\n      } else {\r\n        setInFavorite(true);\r\n        dispatch(addFavorite(id));\r\n        changeFavoriteList(userData.name, id, true);\r\n      }\r\n    } else {\r\n      navigate('/auth');\r\n    }\r\n  };\r\n\r\n  return { inFavorite, addInFavorite };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card_container\":\"SearchCard_card_container__A7BVa\",\"like_container\":\"SearchCard_like_container__IkJzf\"};","import styles from './SearchCard.module.scss';\r\nimport { FilmData } from '../../../types/apiTypes';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ButtonLike } from '../../../components/ButtonLike/ButtonLike';\r\nimport { useFavorite } from '../../../hooks/useFavorite/useFavorite';\r\n\r\nexport const SearchCard: React.FC<FilmData> = (props) => {\r\n  const { inFavorite, addInFavorite } = useFavorite(props.kinopoiskId + '');\r\n  const naviagate = useNavigate();\r\n\r\n  return (\r\n    <div\r\n      onClick={() => naviagate(`/openmovie/${props.kinopoiskId}`)}\r\n      className={styles.card_container}>\r\n      <img className={styles.image} src={props.posterUrl} />\r\n      <div className={styles.like_container}>\r\n        <ButtonLike active={inFavorite} onClick={addInFavorite} />\r\n      </div>\r\n      {props.nameRu ? <p>{props.nameRu}</p> : <p>{props.nameOriginal}</p>}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"TrendingPage_title__O-EJ7\",\"page_container\":\"TrendingPage_page_container__qYXHv\",\"grid_container\":\"TrendingPage_grid_container__86C1h\"};","import { useSearchParams } from 'react-router-dom';\r\nimport { useGetCollectionsQuery } from '../../services/movieApi/movieApi';\r\nimport { SearchCard } from '../SearchPage/SearchCard/SearchCard';\r\nimport styles from './TrendingPage.module.scss';\r\nimport { FilmData } from '../../types/apiTypes';\r\nimport { ErrorComponent } from '../../components/ErrorComponent/ErrorComponent';\r\nimport { MovieLoader } from '../../components/MovieLoader/MovieLoader';\r\nimport { PaginationComponent } from '../../components/PaginationComponent/PaginationComponent';\r\n\r\nconst TrendingPage = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const page = Number(searchParams.get('page')) || 1;\r\n  const type = searchParams.get('type') || 'TOP_POPULAR_ALL';\r\n  const { data, isLoading, error } = useGetCollectionsQuery({ page, type });\r\n\r\n  if (isLoading) {\r\n    return <MovieLoader />;\r\n  }\r\n  const filmList: FilmData[] = data?.items;\r\n\r\n  return (\r\n    <div className={styles.page_container}>\r\n      <h4 className={styles.title}>Trending films</h4>\r\n\r\n      {!!filmList?.length ? (\r\n        <>\r\n          <div className={styles.grid_container}>\r\n            {filmList.map((movie) => {\r\n              return <SearchCard key={movie.kinopoiskId} {...movie} />;\r\n            })}\r\n          </div>\r\n          <PaginationComponent totalPages={data.totalPages} />\r\n        </>\r\n      ) : (\r\n        <ErrorComponent text=\"Movies not found\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendingPage;\r\n"],"names":["ButtonLike","_ref","active","onClick","_jsx","GoHeartFill","e","stopPropagation","className","styles","size","PaginationButton","text","currentPage","window","scrollTo","top","behavior","children","PaginationInput","totalPages","setData","value","setValue","useState","useEffect","timer","setTimeout","clearTimeout","placeholder","onChange","test","target","PaginationComponent","searchParams","setSearchParams","useSearchParams","setCurrentPage","paramsObject","Object","fromEntries","entries","page","setNewPage","number","newParams","URLSearchParams","set","_jsxs","num","Array","from","length","_","i","map","_Fragment","useFavorite","id","dispatch","useAppDispatch","navigate","useNavigate","userData","authorized","useAppSelector","state","auth","inFavorite","setInFavorite","favorites","includes","addInFavorite","name","deleteFavorite","changeFavoriteList","addFavorite","SearchCard","props","kinopoiskId","naviagate","card_container","image","src","posterUrl","like_container","nameRu","nameOriginal","TrendingPage","Number","get","type","data","isLoading","error","useGetCollectionsQuery","MovieLoader","filmList","items","movie","ErrorComponent"],"sourceRoot":""}